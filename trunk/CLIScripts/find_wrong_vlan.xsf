 #@MetaDataStart
 #@DetailDescriptionStart
 ################################################################
 # Extreme Networks(R) CLI Script
 #
 # Script        : netlogin_ACL.xsf
 # Revision      : Rev1.0
 # Last Updated  : 2009_08_04
 # Purpose: To find all the ports in netlogin then apply an
 # ACL to those ports.
 # Note: Modify the variable  set var aclName < policy file name >
 # Example: load script find_wrong_vlan.xsf < 1 | 0 >
 # Example:  1 for On
 # Example:  0 for Off
 ################################################################
 #@DetailDescriptionEnd
 create log entry "**********Starting CLI Script**********"
 enable cli scripting
 disable clipaging
 ################################################################
 #@ScriptDescription "Short  Script Description"
 # @VariableFieldLabel "When this script encounters errors, do you wish to abort or ignore (abort or ignore)"
 set var ynCliModeAbortEnabled ignore
 # @SeparatorLine
 # End of custom variable definitations
 #@MetaDataEnd
 ################################################################
 #  CONFIGURATION DETAIL
 set var aclName find_wrong_vlan
 set var onOrOff $CLI.ARGV1
 ################################################################
 # ERROR HANDLING
 ################################################################
 if (!$match($ynCliModeAbortEnabled,ignore)) then
  create log entry "CLI mode set for Ignore on error"
  configure cli mode scripting ignore-error
 else
  create log entry "CLI mode set for abort on error"
  configure cli mode scripting abort-on-error
 endif
 ################################################################
 # Start of CLI Script (Enter the custom script code below)
 ################################################################
 #
 # Find Netlogin Ports
 #
 set var CLI.OUT " "
 show configuration netlogin
 set var inputA $TCL(list ${CLI.OUT})
 set var listA $TCL(split $inputA "\n")
 set var countA $TCL(llength $listA)
 set var icountBack ($countA - 0)
 set var icount 0
 while ($icount < $icountBack) do
  set var findIt $TCL(lindex $listA $icount)
  set var findNetloginPorts $TCL(regexp {(?!enable\snetlogin\sports\s+)([` `,0-9:-]+\s+)(dot1x)} $findIt)
  set var findEnd $TCL(regexp {configure\s+netlogin\s+ports\s+} $findIt)
 if ($findNetloginPorts == 1) then
   set var vlanNameOnly $TCL(regexp -inline {(?!enable\snetlogin\sports\s+)([` `,0-9:-]+\s+)(dot1x)} $findIt)
   set var value1 $TCL(lindex $vlanNameOnly 1)
   set var value3 $TCL(lindex $vlanNameOnly 3)
 if ($onOrOff == 1) then
   configure access-list $(aclName) ports $(value1) ingress
   	set var printA "$(value3) - configure access-list $(aclName) ports $(value1) ingress"
   		show var printA
   enable clear-flow
 else
   unconfigure access-list $(aclName)
   	set var printA "unconfigure access-list $(aclName)"
   		show var printA
   disable clear-flow
 endif
   delete var printA
   delete var value1
   delete var value3
   delete var vlanNameOnly
 endif
 if ($findEnd == 1) then
 set var icount ($icountBack)
 else
 set var icount ($icount + 1)
 endif
 endwhile
 delete var CLI.OUT
 delete var inputA
 delete var listA
 delete var countA
 delete var icount
 delete var aclName
 delete var findEnd
 delete var findIt
 delete var icountBack
 delete var onOrOff
 delete var findNetloginPorts
 delete var ynCliModeAbortEnabled
 ################################################################
 # End of CLI Script
 ################################################################
 disable cli scripting
 create log entry "**********Finshed running CLI Script**********"
