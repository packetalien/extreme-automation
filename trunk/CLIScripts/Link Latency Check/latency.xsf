enable cli scripting
# @METADATASTART
#@DetailDescriptionStart
#############################################################################
#
# Script        	: Auto-VLAN Provisioning 
# Revision      	: 1.1
# EXOS Version(s)  	: 12.1.x and Newer
# Last Updated  	: April 19, 2010
#
# Purpose: 
# This script version will provision auto-configure to run on default bootup.
#  
# The script will initially show EDP to find the VLAN, VLAN ID and port that will be connected to 
# the uplink.  The script will then create a VLAN, configure it with VLAN ID and add the port tagged
# or untagged as necessary.
# Note: The lack of whitespace is due to 5000 character limit in Dynamic scripts
#
# Author			: Extreme Extensibility Team
# Contact			: info@extremenetworks.com
# Contact			: www.ethernation.net (ExtremeXOS Forums)
###############################################################################
#  Change Log
#
# 	10 April 2010: Script Created
#	21 April 2010: Added read functionality for VR and Ping count
#	21 April 2010: Corrected VAR errors.
###############################################################################
#@DetailDescriptionEnd

disable clipaging
set var CLI.OUT " "                                              
                                                                 
#                                                                
# Some user defined variables                                    
#                                                                


set var pCnt $read(Enter how many pings to send (e.g. 100))
set var vryesno $read(Is this switch managed with vr-mgmt? y or n)
	set var vryesnotest $tcl(regexp $vryesno {y})
		
		if ($vryesnotest == 1) then
			set var pVR vr-mgmt
			set var dsplyvarvr "You selected vr $pVr "
			show var dsplyvarvr
		else
			set var pVR vr-default
			set var dsplyvarvr "You selected vr $pVr "
			show var dsplyvarvr
		endif                       
set var pTOS 248                                             
set var pType icmp                                               
                                                                 
#                                                                
# Execute CLI                                                    
#                                                                
IF ( $MATCH($pType,udp)==0 ) THEN                                
  ping count $pCnt udp dont-fragment tos $pTOS vr $pVR $CLI.ARGV1
ELSE                                                             
  ping count $pCnt dont-fragment tos $pTOS vr $pVR $CLI.ARGV1    
ENDIF                                                        
set var input $TCL(split ${CLI.OUT} "\n")                    
                                                
#                                               
# Add up our output                             
#                                               
set var acc 0                                   
set var count 1                                 
while ($count <= $pCnt) do                      
  set var line $TCL(lindex $input $count)       
  set var tl $TCL(split $line "=")              
  set var ms $TCL(lindex $tl 3)                 
  set var ts $TCL(split $ms "m")                
  set var t $TCL(lindex $ts   0)                
  set var acc ($acc + $t)                     
  set var count ($count + 1)                    
endwhile                                        
                                                
#                                               
# Determine Average and Print                   
#                                               
set var avg $TCL(expr $acc / $pCnt)           
set var txt "Average Latency over $pCnt packets in ms"
show var txt                                          
show var avg                                          
            
